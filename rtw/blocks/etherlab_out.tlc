%implements "etherlab_out" "C"

%%
%% This TLC Implements the necessary IO Functions to communicate
%% with the EtherLAB Generic IO Layer
%%
%% Copyright (C) 2006
%% Richard Hacker
%% IgH Essen GmbH
%% 
%% License: GPL

%include "ETL.tlc"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockTypeSetup( block, system ) void
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %<InitETL()>
  %<LibAddToCommonIncludes("rt_vars.h")>
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockInstanceSetup( block, system ) void
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %assign dtype = GetEtlDTypeName(LibBlockInputSignalDataTypeId(0))
  %assign tid = LibGetGlobalTIDFromLocalSFcnTID(0)
  %assign tid = tid ? tid - LibGetTID01EQ() : 0

  /* Output RT Variable %<Type> Block: %<VarName> 
   * Registering source variable with EtherLAB IO Signal Layer
   */
  if ((%<ETL.ErrStr> = rt_var_reg_output(&rt_app, "%<VarName>", %<dtype>, \
             %<LibBlockInputSignalWidth(0)>, %<tid>, \
            &%<LibBlockPWork(DstAddr,"","",0)>))) {
        snprintf(%<ETL.ErrMsg>, sizeof(%<ETL.ErrMsg>), 
           "Output Signal %<VarName> could not be registered: %s",
           %<ETL.ErrStr>);
        %<LibSetRTModelErrorStatus( "%<ETL.ErrMsg>")>;
  }
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Outputs( block, system ) Output
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  /* %<Type> Block: %<VarName> 
   */
  %%
  %assign dtype = LibBlockInputSignalDataTypeName(0,tRealPart)
  %assign rollVars = ["U"]
  %roll sigIdx = RollRegions, lcv = RollThreshold, block, ...
        "Roller", rollVars
    %if lcv == ""
      %assign dstIdx = sigIdx
    %else
      %if sigIdx == 0
        %assign dstIdx = lcv
      %else
        %assign dstIdx = "%<lcv> + %<sigIdx>"
      %endif
    %endif
    ((%<dtype>*)%<LibBlockPWork(DstAddr,"","",0)>)[%<dstIdx>] = \
        %<LibBlockInputSignal(0,"",lcv,sigIdx)>;
  %endroll
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function GetEtlDTypeName( dtype ) void
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %switch dtype
    %case tSS_BOOLEAN
      %return "pd_boolean_T"
    %case tSS_UINT8
      %return "pd_uint8_T"
    %case tSS_INT8
      %return "pd_sint8_T"
    %case tSS_UINT16
      %return "pd_uint16_T"
    %case tSS_INT16
      %return "pd_sint16_T"
    %case tSS_UINT32
      %return "pd_uint32_T"
    %case tSS_INT32
      %return "pd_sint32_T"
    %case tSS_DOUBLE
      %return "pd_double_T"
    %case tSS_SINGLE
      %return "pd_single_T"
    %default
      %error Unknown PDODataType: %<dtype>; Known types: ...
                %<tSS_UINT8> %<tSS_INT8> %<tSS_UINT16> %<tSS_INT16> ...
                %<tSS_UINT32> %<tSS_INT32> %<tSS_BOOLEAN> ...
                %<tSS_DOUBLE> %<tSS_SINGLE>
  %endswitch
%endfunction
