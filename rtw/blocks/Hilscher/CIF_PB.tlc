%%
%% Generic Routines to handle Profibus
%% 
%% Copyright (C) 2006
%% Richard Hacker
%% IgH Essen GmbH
%% 
%% License: GPL


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function InitCIF( block, system) void
%% This function checks whether the CIFsystem has been called once
%% before already, which is demonstrated by the existance of variable 
%% system.CIF. If not, include C-header file for CIF_PB. 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  %if !EXISTS(system.CIF_PB)
    %trace "Initializing CIFInterface"
    %addtorecord system CIF_PB { ...
                NumCards 0 ...
                }

    %% CIF PB header
    %<LibAddToCommonIncludes("cif_pb.h")>
  %endif
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function GetCifCardIdx(system)
%% Find the record index for CIF Card %<CifId>
%% Return: CardIdx : index in system.CIF_PB.Master if found
%%         -1: not found
%%
%% %<MasterId> is a global variable 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %with system.CIF_PB
    %foreach m = NumCards
      %if Card[m].Id == CIF_CardId
        %trace "Found CIF Card %<CIF_CardId> @ Idx %<m>"
        %return m
      %endif
    %endforeach
  %endwith
  %return -1
%endfunction

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function InitCIFCard( block, system)
%% Make sure the CIF card gets registered and deregistered
%% and reset before starting
%% Return: CardIdx : index in system.CIF_PB.Card
%%                      of master
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %assign model_c = LibGetModelDotCFile()

  %with system.CIF_PB
    %assign CardIdx = GetCifCardIdx(system)

    %if CardIdx != -1
      %addtorecord block CIF_CardIdx CardIdx
      %return CardIdx
    %endif

    %% This is the first time this CIF Card was called. Setup the structures
    %% required to get it to work.

    %assign CardIdx = NumCards

    %assign system.CIF_PB.NumCards= CardIdx + 1

    %% Create record structure for this Card in the system
    %% All slaves attached to this master will be recorded here
    %addtorecord system.CIF_PB Card { ...
          Id CIF_CardId ...
          CIF_CardStruct "cif_card_%<CardIdx>" ...
          }
    %trace "Added new Record for CIF Card %<CIF_CardId> @ %<CardIdx>; ...
           system.CIF_PB = %<system.CIF_PB>"

    %addtorecord block CIF_CardIdx CardIdx

    %with CIF_PB.Card[CardIdx]
      %% Define a C global pointer for the Card. All CIF calls
      %% require this pointer
      %openfile buf

        /* CIF Card %<CIF_CardId> */
        struct cif_card_data *%<CIF_CardStruct>;
      %closefile buf
      %<LibSetSourceFileSection(model_c, "Declarations", buf)>

      %openfile buf

      /* %<Name>: Exchange IO for CIF Card %<CIF_CardId> */
      cif_exchange_io(%<CIF_CardStruct>);
      %closefile buf
      %<LibSystemOutputCustomCode(system,buf,"trailer")>

      %% Insert code to request the CIF Card at the start of mdlStart()
      %openfile buf
  
      /* %<Name>: Grab CIF Card %<CIF_CardId> */
      if (cif_open_card("%<CIF_CardId>", &%<CIF_CardStruct>)) {
          %<LibSetRTModelErrorStatus("\"CIF Card %<CIF_CardId> initialise failed\"")>;
          return;
      }
      %closefile buf
      %<LibMdlStartCustomCode(buf,"execution")>

      %openfile buf

      /* %<Name>: Release CIF Card %<CIF_CardId> */
      if (%<CIF_CardStruct>) {
        cif_close_card(%<CIF_CardStruct>);
      }
      %closefile buf
      %<LibMdlTerminateCustomCode(buf,"trailer")>

    %endwith
  %endwith

  %return CardIdx
%endfunction
