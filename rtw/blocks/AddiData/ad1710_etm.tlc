%implements "ad1710_etm" "C"

%%
%% Hardware Driver for Beckhoff's EtherCAT Digital Input Terminal
%% series EL10xx
%% 
%% This TLC Implements the necessary IO Functions to communicate
%% with the EtherCAT Driver enabling the usage of a digital input
%% terminal.
%%
%% Copyright (C) 2006
%% Richard Hacker
%% IgH Essen GmbH
%% 
%% License: GPL

%include "AD1710.tlc"

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockTypeSetup( block, system ) void
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %<InitAD1710(block, system)>
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function BlockInstanceSetup( block, system ) void
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %openfile buf
  uint32_T pci1710_etm_real_time;
  uint32_T pci1710_etm_rv;
  %closefile buf
  %<LibMdlStartCustomCode(buf, "header")>
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Start(block, system) Output
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  /* %<Type> Block: %<Name> 
   * Registering PCI1710_ETM
   */

   pci1710_etm_rv = i_APCI1710_InitETM(%<Board>,  ...
                           %<Module>,  ...
                           %<ClockSrc>,  ...
                           %<TimingUnit>, ...
                           %<TimingBase> ...
                           &pci1710_etm_real_time);
   if (pci1710_etm_rv) {
      %<LibSetRTModelErrorStatus("\"Failed to initialise APCI1710_ETM\"")>
   }
   %<LibBlockRWork(RealTime,"","",0)> = (real_T)pci1710_etm_real_time;

   pci1710_etm_rv = i_APCI1710_EnableETM(%<Board>, /* b_BoardHandle  */
                               %<Module>,/* b_ModuleNumber */ 
                               0,        /* b_ETM */
                               1,        /* b_EdgeLevel */
                               1,        /* b_TriggerLevel */
                               1,        /* b_CycleMode */
                               0,        /* b_FirstTriggerMode */
                               APCI1710_DISABLE);       /* b_InterruptEnable */
   if (pci1710_etm_rv) {
      %<LibSetRTModelErrorStatus("\"Failed to initialise APCI1710_ETM\"")>
   }
 
%endfunction


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%function Outputs( block, system ) Output
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  /* %<Type> Block: %<Name> 
   */
  %%
  {
        int_T time;
        int8_T stat;

        i_APCI1710_ReadETMTotalTime( ...
                        %<Board>, ...
                        %<Module>, ...
                        0, ...
                        0, ...
                        &stat, ...
                        &time);
        %<LibBlockOutputSignal(0,"","",0)> = 
                %<LibBlockRWork(RealTime,"","",0)> * time;

        i_APCI1710_ReadETMTotalTime( ...
                        %<Board>, ...
                        %<Module>, ...
                        1, ...
                        0, ...
                        &stat, ...
                        &time);
        %<LibBlockOutputSignal(0,"","",1)> = 
                %<LibBlockRWork(RealTime,"","",0)> * time;
  }
%endfunction
