function rv = ep2xxx(model,input_type)

entries = [...
           hex2dec('7000'), 1, 1, 1001; ...
           hex2dec('7000'), 2, 1, 1001; ...
           hex2dec('7000'), 3, 1, 1001; ...
           hex2dec('7000'), 4, 1, 1001; ...

           hex2dec('7010'), 1, 1, 1001; ...
           hex2dec('7010'), 2, 1, 1001; ...
           hex2dec('7010'), 3, 1, 1001; ...
           hex2dec('7010'), 4, 1, 1001; ...

           hex2dec('7000'), 1, 1, 1001; ...
           hex2dec('7010'), 1, 1, 1001; ...
           hex2dec('7020'), 1, 1, 1001; ...
           hex2dec('7030'), 1, 1, 1001; ...
           hex2dec('7040'), 1, 1, 1001; ...
           hex2dec('7050'), 1, 1, 1001; ...
           hex2dec('7060'), 1, 1, 1001; ...
           hex2dec('7070'), 1, 1, 1001; ...
           hex2dec('7080'), 1, 1, 1001; ...
           hex2dec('7090'), 1, 1, 1001; ...
           hex2dec('70a0'), 1, 1, 1001; ...
           hex2dec('70b0'), 1, 1, 1001; ...
           hex2dec('70c0'), 1, 1, 1001; ...
           hex2dec('70d0'), 1, 1, 1001; ...
           hex2dec('70e0'), 1, 1, 1001; ...
           hex2dec('70f0'), 1, 1, 1001; ...
           ];


        

pdo = [...
         hex2dec('1600'),  1,  4;...
         hex2dec('1601'),  5,  8;...

         hex2dec('1600'),  9.  9;...
         hex2dec('1601'), 10, 10;...
         hex2dec('1602'), 11, 11;...
         hex2dec('1603'), 12, 12;...
         hex2dec('1604'), 13, 13;...
         hex2dec('1605'), 14, 14;...
         hex2dec('1606'), 15, 15;...
         hex2dec('1607'), 16, 16;...
         hex2dec('1608'), 17, 17;...
         hex2dec('1609'), 18, 18;...
         hex2dec('160a'), 19, 19;...
         hex2dec('160b'), 20, 20;...
         hex2dec('160c'), 21, 21;...
         hex2dec('160d'), 22, 22;...
         hex2dec('160e'), 23, 23;...
         hex2dec('160f'), 24, 24;...
        

      ];



%   Model                  ProductCode          Revision       TxStart|TxEnd

models = struct(...
    'EP20011000_001003E8'  ,[hex2dec('07d14052'), hex2dec('001003e8'),  1,   2 ], ...
    'EP20011000_001103E8'  ,[hex2dec('07d14052'), hex2dec('001103e8'),  1,   2 ], ...
    'EP20080001_00100001'  ,[hex2dec('07d84052'), hex2dec('00100001'),  3,  10 ], ...
    'EP20080001_00110001'  ,[hex2dec('07d84052'), hex2dec('00110001'),  3,  10 ], ...
    'EP20080002_00100002'  ,[hex2dec('07d84052'), hex2dec('00100002'),  3,  10 ], ...
    'EP20080002_00110002'  ,[hex2dec('07d84052'), hex2dec('00110002'),  3,  10 ], ...
    'EP20280001_00100001'  ,[hex2dec('07ec4052'), hex2dec('00100001'),  3,  10 ], ...
    'EP20280001_00110001'  ,[hex2dec('07ec4052'), hex2dec('00110001'),  3,  10 ], ...
    'EP20280002_00100002'  ,[hex2dec('07ec4052'), hex2dec('00100002'),  3,  10 ], ...
    'EP20280002_00110002'  ,[hex2dec('07ec4052'), hex2dec('00110002'),  3,  10 ], ...
    'EP28090021_00100015'  ,[hex2dec('0af94052'), hex2dec('00100015'),  3,  18 ], ...
    'EP28090022_00100016'  ,[hex2dec('0af94052'), hex2dec('00100016'),  3,  18 ] ...
    );

rv.SlaveConfig.vendor = 2;
rv.SlaveConfig.description = model;


product = models.(model);
rv.SlaveConfig.product = product(1);

% RxPdo SyncManager
rv.SlaveConfig.sm = { {0 0 {}} };

% Populate the RxPDO Inputs structure
rv.SlaveConfig.sm{1}{3} = arrayfun(...
        @(x) {pdo(x,1), entries(pdo(x,2):pdo(x,3),:)}, ...
        product(3):product(4), ...
        'UniformOutput',0 ...
);

%Populate the Port entries

r = 0:product(4)-product(3);
pdo_entries = pdo(product(3),2):pdo(product(4),3);

if strcmp(input_type, 'Vector Input')
    if numel(r) == numel(pdo_entries)
        rv.PortConfig.input.pdo = [zeros(numel(r),4)];
        rv.PortConfig.input.pdo(:,2) = r;
    else
        rv.PortConfig.input.pdo = [zeros(numel(pdo_entries),4)];
        for k = 0:max(r)
        subindex = [pdo(k+1,2):pdo(k+1,3)];
        matrix = [zeros(numel(subindex))];
        matrix(:,3) = subindex-pdo(k+1,2);
        matrix(:,2) = k;
        rv.PortConfig.input.pdo(subindex,:) = matrix;
        end
    end
else
    if numel(r) == numel(pdo_entries)
        rv.PortConfig.input = arrayfun(@(x) struct('pdo', [0, x 0, 0]), r);
    else
        for k = 0:max(r)
            subindex = [pdo(k+1,2):pdo(k+1,3)];
            rv.PortConfig.input(subindex) = ...
                arrayfun(@(x) struct('pdo', [0, k, x, 0]), subindex-pdo(k+1,2));
        end
    end
end

