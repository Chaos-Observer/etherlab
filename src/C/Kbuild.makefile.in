##############################################################################
#
# $Id$
#
# This is the kernel makefile for the EtherLab C-API. 
#
# Copyright (C) 2008 Richard Hacker
# License: GPLv3
#
##############################################################################

#
# Enter the name of your model here. This will be the file name of the kernel
# object that is created. This is also the name of the Model Description File
# .xml file.
#
# Requirement: Mandatory
#
MODEL_NAME = my-model

#
# List the model sources here. Only .c files are supported. No absolute paths
# are allowed; the files have to be in the current directory or lower.
#
# Requirement: Mandatory
#
MODEL_SOURCES = 

#
# CFLAGS with which your model will be built. Here you can conveniently add
# include paths for your model
#
# Requirement: Optional
#
#MODEL_CFLAGS = -I/custom/include

######## END OF USER CONFIGURABLE PART #######################################

ifeq ($(KERNELRELEASE),)

modules %:
	$(MAKE) -C @LINUX_DIR@ M=$(shell pwd) $@

.linted: $(MODEL_NAME).xml
	xmllint @prefix@/lib/C/rt_model.xsd $^ > $@

else #ifeq ($(KERNELRELEASE),)

EXTRA_CFLAGS = \
        -I@ETHERLAB_DIR@ \
        -I@prefix@ \
        -I@RTAI_DIR@ \
        -I$(src) \
        $(MODEL_CFLAGS) \
        @RTAI_FLAGS@ \
        -DMODEL=$(MODEL_NAME)

obj-m := $(MODEL_NAME).o
$(MODEL_NAME)-y := mdl_main.o data.o $(MODEL_SOURCES:.c=.o) \
        .src/register.o .src/rt_mdl_main.o mdf.o
# Additionally mark the source files in .src as SECONDARY, so they are 
# not deleted, since they are needed by modpost.
.SECONDARY: $(obj)/.src/register.c $(obj)/.src/rt_mdl_main.c

clean-dirs := .src
clean-files := \
    .*.dep \
    .linted \
    cvt.h \
    data.c \
    inputptr.h \
    mdf.c \
    model_defines.h \
    param.h \
    signal.h

# Kbuild can only compile files that are local to $(obj).
# If a file exists in the source distribution, copy it locally.
$(obj)/.src/%: @prefix@/src/kernel/%
	$(Q)mkdir -p $(obj)/.src
	$(Q)cp $< $@

HEADERS = $(obj)/param.h $(obj)/signal.h $(obj)/inputptr.h
MDL_DEFINES = $(obj)/model_defines.h

$(obj)/data.o: $(obj)/data.c $(HEADERS) $(MDL_DEFINES)

$(obj)/mdl_main.o: $(HEADERS) $(MDL_DEFINES)

$(obj)/mdf.o: $(obj)/mdf.c $(HEADERS) $(MDL_DEFINES)

quiet_cmd_xsltproc := XSLTPROC $@

XSL_CMD = $(basename $(notdir $@))
$(HEADERS): $(obj)/$(MODEL_NAME).xml
	@XSLTPROC@ --stringparam header_type $(XSL_CMD) \
                @prefix@/lib/C/header.xsl $< | @INDENT@ > $@

XSLTFILE = @prefix@/lib/C/$(notdir $@).xsl
$(MDL_DEFINES) $(obj)/data.c $(obj)/mdf.c: $(obj)/$(MODEL_NAME).xml
	@XSLTPROC@ $(XSLTFILE) $< | @INDENT@ > $@

endif #ifeq ($(KERNELRELEASE),)

##############################################################################
