#!/bin/sh

#------------------------------------------------------------------------------
#
#  Init script for EtherLab/RTW
#
#  $Id$
#
#  Copyright (C) 2006  Florian Pose, Ingenieurgemeinschaft IgH
#
#------------------------------------------------------------------------------

### BEGIN INIT INFO
# Provides:          etherlab
# Required-Start:    $local_fs $syslog $network
# Should-Start:      $time ntp ethercat
# Required-Stop:     $local_fs $syslog $network
# Should-Stop:       $time ntp ethercat
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: EtherLab/RTW
# Description:
### END INIT INFO

#------------------------------------------------------------------------------

SERVICE="EtherLab/RTW"
MODULE="rt_kernel"
DEVICE="etl"
MODULE_PATH="@prefix@/modules/$MODULE.ko"

#------------------------------------------------------------------------------

# ETHERLAB_CONFIG=/etc/sysconfig/etherlab

# if [ ! -r $ETHERLAB_CONFIG ]; then
# 	echo "$ETHERLAB_CONFIG not existing";
# 	if [ "$1" = "stop" ]; then
# 		exit 0
# 	else
# 		exit 6
# 	fi
# fi

# . $ETHERLAB_CONFIG

#------------------------------------------------------------------------------

. /etc/rc.status
rc_reset

case "$1" in

	start)
		echo -n Starting $SERVICE

		# remove stale device nodes
		for i in {0..9}; do
			rm -f /dev/${DEVICE}$i
		done

                if ! ( grep -q rtai_hal /proc/modules || insmod @RTAI_DIR@/modules/rtai_hal.ko ) || \
                        ! ( grep -q rtai_up /proc/modules || insmod @RTAI_DIR@/modules/rtai_up.ko ) || \
                        ! ( grep -q rtai_sem /proc/modules || insmod @RTAI_DIR@/modules/rtai_sem.ko ) || \
                        ! ( grep -q rtai_math /proc/modules || insmod @RTAI_DIR@/modules/rtai_math.ko ) || \
		        ! insmod $MODULE_PATH; then
			
                    /bin/false
		    rc_status -v
		    rc_exit
		fi

		# get dynamic major number
        major=$(awk "\$2==\"$MODULE\" {print \$1}" /proc/devices)

        # create device nodes
		for i in {0..64}; do
			mknod /dev/${DEVICE}$i c $major $i
		done

		rc_status -v
		;;

    stop)
		echo -n Shutting down $SERVICE

		if lsmod | grep "^$MODULE " > /dev/null; then
			if ! rmmod $MODULE; then
				/bin/false
				rc_status -v
				rc_exit
			fi;
		fi;

		# remove device nodes
		for i in {0..64}; do
			rm -f /dev/${DEVICE}$i
		done

		rc_status -v
		;;

    restart)
		$0 stop || exit 1
		sleep 1
		$0 start
		rc_status
		;;

    status)
		echo -n Checking for $SERVICE

		lsmod | grep "^$MODULE " > /dev/null
		rt_kernel_running=$?

		test $rt_kernel_running -eq 0

		rc_status -v
		;;

    *)
		echo "USAGE: $0 {start|stop|restart|status}"
		;;

esac

rc_exit

#------------------------------------------------------------------------------
